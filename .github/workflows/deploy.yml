name: Deploy BAS App to BTP Subaccounts

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Or a suitable runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your project's required Node.js version

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Cloud MTA Build Tool (MBT)
        run: npm install -g mbt
      # --- CORRECTED SAP BTP CLI INSTALLATION ---
      # This step uses a dedicated GitHub Action to handle the download,
      # which resolves the EULA redirect issue you faced.
      - name: Checkout specific folder using sparse-checkout
        uses: actions/checkout@v4
        with:
         sparse-checkout: |
          bin/
          sparse-checkout-cone-mode: false
          fetch-depth: 1

      - name: List files for debug
        run: ls -R

      - name: Inspect archive contents
        run: tar -tzf bin/btp-cli-linux-amd64-2.90.2.tar.gz

      - name: Extract and install BTP CLI
        run: |
          cp bin/btp-cli-linux-amd64-2.90.2.tar.gz .
          tar -xzf btp-cli-linux-amd64-2.90.2.tar.gz
          sudo mv linux-amd64/btp /usr/local/bin/
          btp --version

      - name: Install Cloud Foundry CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo gpg --dearmor -o /usr/share/keyrings/cli.cloudfoundry.org.gpg
          echo "deb [signed-by=/usr/share/keyrings/cli.cloudfoundry.org.gpg] https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt update
          sudo apt install cf8-cli
      # ------------------------------------------
      - name: Build MTA Archive
        run: mbt build -p=cf # Builds the .mtar file at the repository root

      - name: Get Source Subaccount Details
        id: source_details
        run: |
          # Login using username/password
          btp login \
          --url "https://cpcli.cf.eu10.hana.ondemand.com" \
          --subdomain "${{ secrets.BTP_SUBDOMAIN_DEV }}" \
          --user "${{ secrets.CF_USERNAME_DEV }}" \
          --password "${{ secrets.CF_PASSWORD_DEV }}"
          # Get subaccount info and filter for JSON
          SOURCE_SUBACCOUNT_INFO=$(btp get accounts/subaccount "07d04ce0-4e6e-4c34-9476-325191a3ade5")
          CF_ENV_INFO=$(btp get accounts/environment-instance --subaccount c6a3563a-88b9-412c-9f13-721fc5d89590 --of-type cloudfoundry)
          echo "$SOURCE_SUBACCOUNT_INFO"
          echo "Cloud Foundry Environment Info: $CF_ENV_INFO"

          # Extract the display name using jq
          SOURCE_SUBACCOUNT_NAME=$(echo "$SOURCE_SUBACCOUNT_INFO" | sed -n '3p' | awk '{$1=""; print $0}' | sed 's/^ *//g')

          # Set output for next GitHub Actions steps
          echo "source_name=$SOURCE_SUBACCOUNT_NAME" >> $GITHUB_OUTPUT

      - name: Get Target Subaccount Details
        id: target_details
        run: |
          # Login using username/password
          btp login \
          --url "https://cpcli.cf.eu10.hana.ondemand.com" \
          --subdomain "${{ secrets.BTP_SUBDOMAIN_QA }}" \
          --user "${{ secrets.CF_USERNAME_QA }}" \
          --password "${{ secrets.CF_PASSWORD_QA }}"
          # Get subaccount info
          TARGET_SUBACCOUNT_INFO=$(btp get accounts/subaccount "c6a3563a-88b9-412c-9f13-721fc5d89590")

          echo "$TARGET_SUBACCOUNT_INFO"
          
          TARGET_SUBACCOUNT_NAME=$(echo "$TARGET_SUBACCOUNT_INFO" | sed -n '3p' | awk '{$1=""; print $0}' | sed 's/^ *//g')
          
          # Export output
          echo "target_name=$TARGET_SUBACCOUNT_NAME" >> $GITHUB_OUTPUT

      - name: Install Cloud Foundry CLI MTA Plugin
        run: cf install-plugin -r CF-Community multiapps -f
          
      - name: Log in to Dev Subaccount
        env:
          CF_USERNAME: ${{ secrets.CF_USERNAME_DEV }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD_DEV }}
        run: |
          cf api ${{ secrets.CF_API_DEV }} --skip-ssl-validation
          cf auth $CF_USERNAME $CF_PASSWORD
      
      - name: Target Dev Org and Space
        run: cf target -o "${{ secrets.CF_ORG_DEV }}" -s "${{ secrets.CF_SPACE_DEV }}"
      
      - name: Deploy to Dev Subaccount
        run: cf deploy mta_archives/*.mtar -f
      
      - name: Log in to QA Subaccount
        env:
          CF_USERNAME: ${{ secrets.CF_USERNAME_QA }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD_QA }}
        run: |
          cf api ${{ secrets.CF_API_QA }} --skip-ssl-validation
          cf auth $CF_USERNAME $CF_PASSWORD
      
      - name: Target QA Org and Space
        run: cf target -o "${{ secrets.CF_ORG_QA }}" -s "${{ secrets.CF_SPACE_QA }}"
      
      - name: Deploy to QA Subaccount
        run: cf deploy mta_archives/*.mtar -f
