name: Deploy BAS App to BTP Subaccounts

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Or a suitable runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your project's required Node.js version

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Cloud MTA Build Tool (MBT)
        run: npm install -g mbt
      
      # --- CORRECTED SAP BTP CLI INSTALLATION ---
      # This step uses a dedicated GitHub Action to handle the download,
      # which resolves the EULA redirect issue you faced.
      - name: Install SAP BTP CLI
        uses: btp-cli/github-actions@main
        with:
          version: '2.90.2' # Installs the latest version
      
      - name: Verify BTP CLI installation
        run: btp --version
      # ------------------------------------------

      - name: Install Cloud Foundry CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo gpg --dearmor -o /usr/share/keyrings/cli.cloudfoundry.org.gpg
          echo "deb [signed-by=/usr/share/keyrings/cli.cloudfoundry.org.gpg] https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt update
          sudo apt install cf8-cli

      - name: Build MTA Archive
        run: mbt build -p=cf # Builds the .mtar file at the repository root

      - name: Get Source Subaccount Details
        id: source_details
        run: |
          # Log in to the source global account using the service key credentials
          btp login --url ${{ secrets.SOURCE_API_URL }} --clientid ${{ secrets.SOURCE_BTP_CLIENT_ID }} --clientsecret ${{ secrets.SOURCE_BTP_CLIENT_SECRET }}
          
          # Fetch the details of the specific source subaccount and output as JSON
          SOURCE_SUBACCOUNT_INFO=$(btp get accounts/subaccount "07d04ce0-4e6e-4c34-9476-325191a3ade5" --output json)
          
          # Parse the JSON to get the display name and set it as an environment variable
          SOURCE_SUBACCOUNT_NAME=$(echo "$SOURCE_SUBACCOUNT_INFO" | jq -r '.displayName')
          
          # Pass the name to subsequent steps using an output variable
          echo "source_name=$SOURCE_SUBACCOUNT_NAME" >> $GITHUB_OUTPUT
      
      - name: Get Target Subaccount Details
        id: target_details
        run: |
          # Log in to the target global account using its service key credentials
          btp login --url ${{ secrets.TARGET_BTP_API_URL }} --clientid ${{ secrets.TARGET_BTP_CLIENT_ID }} --clientsecret ${{ secrets.TARGET_BTP_CLIENT_SECRET }}
          
          # Fetch the details of the specific target subaccount and output as JSON
          TARGET_SUBACCOUNT_INFO=$(btp get accounts/subaccount "c6a3563a-88b9-412c-9f13-721fc5d89590" --output json)
          
          # Parse the JSON to get the display name and set it as an environment variable
          TARGET_SUBACCOUNT_NAME=$(echo "$TARGET_SUBACCOUNT_INFO" | jq -r '.displayName')
          
          # Pass the name to subsequent steps using an output variable
          echo "target_name=$TARGET_SUBACCOUNT_NAME" >> $GITHUB_OUTPUT
          
      - name: Install Cloud Foundry CLI MTA Plugin
        run: cf install-plugin -r CF-Community multiapps -f
          
      - name: Log in to Dev Subaccount
        env:
          CF_USERNAME: ${{ secrets.CF_USERNAME_DEV }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD_DEV }}
        run: |
          cf api ${{ secrets.CF_API_DEV }} --skip-ssl-validation
          cf auth $CF_USERNAME $CF_PASSWORD
      
      - name: Target Dev Org and Space
        run: cf target -o "${{ secrets.CF_ORG_DEV }}" -s "${{ secrets.CF_SPACE_DEV }}"
      
      - name: Deploy to Dev Subaccount
        run: cf deploy mta_archives/*.mtar -f
      
      - name: Log in to QA Subaccount
        env:
          CF_USERNAME: ${{ secrets.CF_USERNAME_QA }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD_QA }}
        run: |
          cf api ${{ secrets.CF_API_QA }} --skip-ssl-validation
          cf auth $CF_USERNAME $CF_PASSWORD
      
      - name: Target QA Org and Space
        run: cf target -o "${{ secrets.CF_ORG_QA }}" -s "${{ secrets.CF_SPACE_QA }}"
      
      - name: Deploy to QA Subaccount
        run: cf deploy mta_archives/*.mtar -f
